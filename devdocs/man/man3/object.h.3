.TH "src/object.h" 3 "Tue Dec 5 2017" "stdgame" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/object.h \- Static, dynamic and active object loader and renderer\&. \fBReferencePoint\fP manager\&. (header)  

.SH SYNOPSIS
.br
.PP
\fC#include 'stdgame\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBStaticObjectPart\fP"
.br
.RI "Cube part of the objects\&. "
.ti -1c
.RI "struct \fBPartColor\fP"
.br
.RI "\fBColor\fP of a cube\&. "
.ti -1c
.RI "struct \fBStaticObject\fP"
.br
.RI "\fBStaticObject\fP - Precalculated move matrix\&. "
.ti -1c
.RI "struct \fBStaticObjectInstance\fP"
.br
.RI "Instance of a \fBStaticObject\fP logically\&. "
.ti -1c
.RI "struct \fBReferencePoint\fP"
.br
.RI "Dynamically changing reference points for animations\&. "
.ti -1c
.RI "struct \fBDynamicObject\fP"
.br
.RI "\fBDynamicObject\fP - Movable object\&. "
.ti -1c
.RI "struct \fBDynamicObjectInstance\fP"
.br
.RI "Instance of a \fBDynamicObject\fP logically\&. "
.ti -1c
.RI "struct \fBActiveObject\fP"
.br
.RI "\fBActiveObject\fP - Set of \fBDynamicObject\fP\&. "
.ti -1c
.RI "struct \fBActiveObjectInstance\fP"
.br
.RI "Instance of a \fBActiveObject\fP logically\&. "
.ti -1c
.RI "struct \fBObjectInfo\fP"
.br
.RI "Object storage\&. "
.ti -1c
.RI "struct \fBCursor\fP"
.br
.RI "\fBCursor\fP object and info storage\&. "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBPTMASK_RENDER_UP\fP   PT_UP"
.br
.RI "Render UP part mask\&. "
.ti -1c
.RI "#define \fBPTMASK_RENDER_DOWN\fP   PT_DOWN"
.br
.RI "Render DOWN part mask\&. "
.ti -1c
.RI "#define \fBPTMASK_RENDER_TOP\fP   PT_TOP"
.br
.RI "Render TOP part mask\&. "
.ti -1c
.RI "#define \fBPTMASK_RENDER_RIGHT\fP   PT_RIGHT"
.br
.RI "Render RIGHT part mask\&. "
.ti -1c
.RI "#define \fBPTMASK_RENDER_BOTTOM\fP   PT_BOTTOM"
.br
.RI "Render BOTTOM part mask\&. "
.ti -1c
.RI "#define \fBPTMASK_RENDER_LEFT\fP   PT_LEFT"
.br
.RI "Render LEFT part mask\&. "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBPartType\fP { \fBPT_NULL\fP = 0b000000, \fBPT_LEFT\fP = 0b000001, \fBPT_BOTTOM\fP = 0b000010, \fBPT_LEFT_BOTTOM\fP = 0b000011, \fBPT_RIGHT\fP = 0b000100, \fBPT_RIGHT_LEFT\fP = 0b000101, \fBPT_RIGHT_BOTTOM\fP = 0b000110, \fBPT_RIGHT_BOTTOM_LEFT\fP = 0b000111, \fBPT_TOP\fP = 0b001000, \fBPT_TOP_LEFT\fP = 0b001001, \fBPT_TOP_BOTTOM\fP = 0b001010, \fBPT_TOP_BOTTOM_LEFT\fP = 0b001011, \fBPT_TOP_RIGHT\fP = 0b001100, \fBPT_TOP_RIGHT_LEFT\fP = 0b001101, \fBPT_TOP_RIGHT_BOTTOM\fP = 0b001110, \fBPT_TOP_RIGHT_BOTTOM_LEFT\fP = 0b001111, \fBPT_DOWN\fP = 0b010000, \fBPT_DOWN_LEFT\fP = 0b010001, \fBPT_DOWN_BOTTOM\fP = 0b010010, \fBPT_DOWN_LEFT_BOTTOM\fP = 0b010011, \fBPT_DOWN_RIGHT\fP = 0b010100, \fBPT_DOWN_RIGHT_LEFT\fP = 0b010101, \fBPT_DOWN_RIGHT_BOTTOM\fP = 0b010110, \fBPT_DOWN_RIGHT_BOTTOM_LEFT\fP = 0b010111, \fBPT_DOWN_TOP\fP = 0b011000, \fBPT_DOWN_TOP_LEFT\fP = 0b011001, \fBPT_DOWN_TOP_BOTTOM\fP = 0b011010, \fBPT_DOWN_TOP_BOTTOM_LEFT\fP = 0b011011, \fBPT_DOWN_TOP_RIGHT\fP = 0b011100, \fBPT_DOWN_TOP_RIGHT_LEFT\fP = 0b011101, \fBPT_DOWN_TOP_RIGHT_BOTTOM\fP = 0b011110, \fBPT_DOWN_TOP_RIGHT_BOTTOM_LEFT\fP = 0b011111, \fBPT_UP\fP = 0b100000, \fBPT_UP_LEFT\fP = 0b100001, \fBPT_UP_BOTTOM\fP = 0b100010, \fBPT_UP_LEFT_BOTTOM\fP = 0b100011, \fBPT_UP_RIGHT\fP = 0b100100, \fBPT_UP_RIGHT_LEFT\fP = 0b100101, \fBPT_UP_RIGHT_BOTTOM\fP = 0b100110, \fBPT_UP_RIGHT_BOTTOM_LEFT\fP = 0b100111, \fBPT_UP_TOP\fP = 0b101000, \fBPT_UP_TOP_LEFT\fP = 0b101001, \fBPT_UP_TOP_BOTTOM\fP = 0b101010, \fBPT_UP_TOP_BOTTOM_LEFT\fP = 0b101011, \fBPT_UP_TOP_RIGHT\fP = 0b101100, \fBPT_UP_TOP_RIGHT_LEFT\fP = 0b101101, \fBPT_UP_TOP_RIGHT_BOTTOM\fP = 0b101110, \fBPT_UP_TOP_RIGHT_BOTTOM_LEFT\fP = 0b101111, \fBPT_UP_DOWN\fP = 0b110000, \fBPT_UP_DOWN_LEFT\fP = 0b110001, \fBPT_UP_DOWN_BOTTOM\fP = 0b110010, \fBPT_UP_DOWN_LEFT_BOTTOM\fP = 0b110011, \fBPT_UP_DOWN_RIGHT\fP = 0b110100, \fBPT_UP_DOWN_RIGHT_LEFT\fP = 0b110101, \fBPT_UP_DOWN_RIGHT_BOTTOM\fP = 0b110110, \fBPT_UP_DOWN_RIGHT_BOTTOM_LEFT\fP = 0b110111, \fBPT_UP_DOWN_TOP\fP = 0b111000, \fBPT_UP_DOWN_TOP_LEFT\fP = 0b111001, \fBPT_UP_DOWN_TOP_BOTTOM\fP = 0b111010, \fBPT_UP_DOWN_TOP_BOTTOM_LEFT\fP = 0b111011, \fBPT_UP_DOWN_TOP_RIGHT\fP = 0b111100, \fBPT_UP_DOWN_TOP_RIGHT_LEFT\fP = 0b111101, \fBPT_UP_DOWN_TOP_RIGHT_BOTTOM\fP = 0b111110, \fBPT_UP_DOWN_TOP_RIGHT_BOTTOM_LEFT\fP = 0b111111 }"
.br
.RI "Object part type\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBStaticObject\fP * \fBloadStaticObject\fP (char[])"
.br
.RI "Load static object\&. "
.ti -1c
.RI "\fBDynamicObject\fP * \fBloadDynamicObject\fP (char[])"
.br
.RI "Load dynamic object\&. "
.ti -1c
.RI "\fBActiveObject\fP * \fBloadActiveObject\fP (char[])"
.br
.RI "Load active object\&. "
.ti -1c
.RI "void \fBrenderStaticObject\fP (\fBGameInstance\fP *, \fBStaticObjectInstance\fP *)"
.br
.RI "Render static object\&. "
.ti -1c
.RI "void \fBrenderDynamicObject\fP (\fBGameInstance\fP *, \fBDynamicObjectInstance\fP *)"
.br
.RI "Render dynamic object\&. "
.ti -1c
.RI "void \fBrenderActiveObject\fP (\fBGameInstance\fP *, \fBActiveObjectInstance\fP *)"
.br
.RI "Render active object\&. "
.ti -1c
.RI "void \fBrenderTile\fP (\fBGameInstance\fP *, \fBTile\fP *)"
.br
.RI "Render map tile\&. "
.ti -1c
.RI "void \fBinitStraticInstance\fP (\fBStaticObjectInstance\fP *)"
.br
.RI "Calculate the move matrix of the static object instance\&. "
.ti -1c
.RI "void \fBinitReferencePoints\fP (\fBGameInstance\fP *this)"
.br
.RI "Initialize reference points\&. "
.ti -1c
.RI "void \fBupdateReferencePoint\fP (\fBGameInstance\fP *this, GLfloat delta)"
.br
.RI "Update reference points\&. "
.in -1c
.SH "Detailed Description"
.PP 
Static, dynamic and active object loader and renderer\&. \fBReferencePoint\fP manager\&. (header) 


.PP
\fBAuthor:\fP
.RS 4
Gerviba (Szabo Gergely) 
.RE
.PP
\fBDefinition:\fP
.RS 4
\fBobject\&.c\fP 
.RE
.PP

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBPartType\fP"

.PP
Object part type\&. \fBFormat\fP: 0bUDTRBL
.PP
Key  Meaning   U  UP   D  DOWN   T  TOP   R  RIGHT   B  BOTTOM   L  LEFT   
.PP
Similar to the CSS box model\&. 
.SH "Function Documentation"
.PP 
.SS "void initReferencePoints (\fBGameInstance\fP * this)"

.PP
Initialize reference points\&. 
.PP
\fBParameters:\fP
.RS 4
\fIthis\fP Actual \fBGameInstance\fP instance 
.RE
.PP

.SS "void initStraticInstance (\fBStaticObjectInstance\fP * instance)"

.PP
Calculate the move matrix of the static object instance\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinstance\fP Object instance to init 
.RE
.PP

.SS "\fBActiveObject\fP* loadActiveObject (char path[])"

.PP
Load active object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpath\fP The path of the file 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBActiveObject\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
Loaded \fBActiveObject\fP 
.RE
.PP

.SS "\fBDynamicObject\fP* loadDynamicObject (char path[])"

.PP
Load dynamic object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpath\fP The path of the file 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBDynamicObject\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
Loaded \fBDynamicObject\fP 
.RE
.PP

.SS "\fBStaticObject\fP* loadStaticObject (char path[])"

.PP
Load static object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpath\fP The path of the file 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBStaticObject\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
Loaded \fBStaticObject\fP 
.RE
.PP

.SS "void renderActiveObject (\fBGameInstance\fP * this, \fBActiveObjectInstance\fP * instance)"

.PP
Render active object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIthis\fP Actual \fBGameInstance\fP instance 
.br
\fIinstance\fP Object instance to render 
.RE
.PP

.SS "void renderDynamicObject (\fBGameInstance\fP * this, \fBDynamicObjectInstance\fP * instance)"

.PP
Render dynamic object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIthis\fP Actual \fBGameInstance\fP instance 
.br
\fIinstance\fP Object instance to render 
.RE
.PP

.SS "void renderStaticObject (\fBGameInstance\fP * this, \fBStaticObjectInstance\fP * instance)"

.PP
Render static object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIthis\fP Actual \fBGameInstance\fP instance 
.br
\fIinstance\fP Object instance to render 
.RE
.PP

.SS "void renderTile (\fBGameInstance\fP * this, \fBTile\fP * tile)"

.PP
Render map tile\&. 
.PP
\fBParameters:\fP
.RS 4
\fIthis\fP Actual \fBGameInstance\fP instance 
.br
\fItile\fP \fBTile\fP to render 
.RE
.PP

.SS "void updateReferencePoint (\fBGameInstance\fP * this, GLfloat delta)"

.PP
Update reference points\&. 
.PP
\fBParameters:\fP
.RS 4
\fIthis\fP Actual \fBGameInstance\fP instance 
.br
\fIdelta\fP Ellapsed time 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for stdgame from the source code\&.
