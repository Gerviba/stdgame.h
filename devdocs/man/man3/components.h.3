.TH "src/components.h" 3 "Tue Dec 5 2017" "stdgame" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/components.h \- Components and event management for menus (header)  

.SH SYNOPSIS
.br
.PP
\fC#include 'stdgame\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBComponent\fP"
.br
.RI "The component base\&. "
.ti -1c
.RI "struct \fBGenericType\fP"
.br
.RI "Generic type variable\&. "
.ti -1c
.RI "struct \fBTextComponent\fP"
.br
.RI "Text type component specific values\&. "
.ti -1c
.RI "struct \fBObjectComponent\fP"
.br
.RI "Object type component specific values\&. "
.ti -1c
.RI "struct \fBImageComponent\fP"
.br
.RI "Image type component specific values\&. "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBComponentType\fP { \fBCT_OBJECT\fP, \fBCT_TEXT\fP, \fBCT_IMAGE\fP }"
.br
.RI "\fBComponent\fP type\&. "
.ti -1c
.RI "enum \fBRelativeX\fP { \fBX_LEFT\fP = -1, \fBX_CENTER\fP = 0, \fBX_RIGHT\fP = 1 }"
.br
.RI "\fBComponent\fP relative horizontal position\&. "
.ti -1c
.RI "enum \fBRelativeY\fP { \fBY_BOTTOM\fP = -1, \fBY_CENTER\fP = 0, \fBY_TOP\fP = 1 }"
.br
.RI "\fBComponent\fP relative vertical position\&. "
.ti -1c
.RI "enum \fBAlign\fP { \fBALIGN_LEFT\fP = -1, \fBALIGN_CENTER\fP = 0, \fBALIGN_RIGHT\fP = 1 }"
.br
.RI "Alignment for text components\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBGenericType\fP * \fBnewGenericValue\fP (void *, size_t)"
.br
.RI "Constructs a new generic value\&. "
.ti -1c
.RI "\fBGenericType\fP * \fBnewGenericIntValue\fP (GLint)"
.br
.RI "Constructs a new GLint generic value\&. "
.ti -1c
.RI "\fBGenericType\fP * \fBnewGenericFloatValue\fP (GLfloat)"
.br
.RI "Constructs a new GLfloat generic value\&. "
.ti -1c
.RI "void \fBsetGenericValue\fP (\fBGenericType\fP *, void *, size_t)"
.br
.RI "Sets the value of the passed generic instance\&. "
.ti -1c
.RI "void \fBsetGenericIntValue\fP (\fBGenericType\fP *, GLint)"
.br
.RI "Sets the value of the passed generic instance\&. "
.ti -1c
.RI "void \fBsetGenericFloatValue\fP (\fBGenericType\fP *, GLfloat)"
.br
.RI "Sets the value of the passed generic instance\&. "
.ti -1c
.RI "GLint \fBgetGenericIntValue\fP (\fBGenericType\fP *)"
.br
.RI "Generic value (GLint type) getter\&. "
.ti -1c
.RI "GLfloat \fBgetGenericFloatValue\fP (\fBGenericType\fP *)"
.br
.RI "Generic value (GLfloat type) getter\&. "
.ti -1c
.RI "void \fBfreeGenericValue\fP (\fBGenericType\fP *)"
.br
.RI "Free the passed gereric value\&. "
.ti -1c
.RI "GLfloat \fBgetAbsoluteX\fP (\fBGameInstance\fP *, \fBRelativeX\fP)"
.br
.RI "Absolute coordinate by the specified relative point and the camera\&. "
.ti -1c
.RI "GLfloat \fBgetAbsoluteY\fP (\fBGameInstance\fP *, \fBRelativeY\fP)"
.br
.RI "Absolute coordinate by the specified relative point and the camera\&. "
.ti -1c
.RI "GLfloat \fBgetCursorProjectedX\fP (\fBGameInstance\fP *, double)"
.br
.RI "Calculate cursor projected value\&. "
.ti -1c
.RI "GLfloat \fBgetCursorProjectedY\fP (\fBGameInstance\fP *, double)"
.br
.RI "Calculate cursor projected value\&. "
.ti -1c
.RI "GLfloat \fBgetFontAlign\fP (\fBGameInstance\fP *this, char str[], \fBFontSize\fP fontSize, \fBAlign\fP align)"
.br
.RI "Calculate text alignment (x-dim) "
.ti -1c
.RI "void \fBrenderTextComponent\fP (\fBComponent\fP *, \fBGameInstance\fP *)"
.br
.RI "\fBonRender()\fP - \fBTextComponent\fP renderer method "
.ti -1c
.RI "void \fBcalcTextButton\fP (\fBComponent\fP *, \fBGameInstance\fP *)"
.br
.RI "onCalc() - \fBTextComponent\fP hover calculator method "
.ti -1c
.RI "void \fBcalcObjectComponentPosition\fP (\fBComponent\fP *, \fBGameInstance\fP *)"
.br
.RI "onCalc() - \fBComponent\fP position calculator method "
.ti -1c
.RI "void \fBcalcOptionsGraphicsButton\fP (\fBComponent\fP *comp, \fBGameInstance\fP *this)"
.br
.RI "onCalc() - \fBOptions\fP button calculator method "
.ti -1c
.RI "void \fBclickStartButton\fP (\fBComponent\fP *, \fBGameInstance\fP *)"
.br
.RI "onClick() - Start map button action "
.ti -1c
.RI "void \fBupdateCursor\fP (\fBGameInstance\fP *this)"
.br
.RI "Update cursor pointer\&. "
.ti -1c
.RI "void \fBclickGameSelector\fP (\fBComponent\fP *comp, \fBGameInstance\fP *this)"
.br
.RI "onClick() - StartGame button action "
.ti -1c
.RI "void \fBclickOptions\fP (\fBComponent\fP *comp, \fBGameInstance\fP *this)"
.br
.RI "onClick() - \fBOptions\fP menu button action "
.ti -1c
.RI "void \fBclickCredits\fP (\fBComponent\fP *comp, \fBGameInstance\fP *this)"
.br
.RI "onClick() - Credits menu button action "
.ti -1c
.RI "void \fBclickExit\fP (\fBComponent\fP *comp, \fBGameInstance\fP *this)"
.br
.RI "onClick() - Exit button action "
.ti -1c
.RI "void \fBclickBack\fP (\fBComponent\fP *comp, \fBGameInstance\fP *this)"
.br
.RI "onClick() - Back to the main menu button action "
.ti -1c
.RI "void \fBclickControllsSet\fP (\fBComponent\fP *comp, \fBGameInstance\fP *this)"
.br
.RI "onClick() - \fBOptions\fP menu controlls set button action "
.ti -1c
.RI "void \fBclickGraphicsSet\fP (\fBComponent\fP *comp, \fBGameInstance\fP *this)"
.br
.RI "onClick() - \fBOptions\fP menu graphics setting set button action "
.ti -1c
.RI "void \fBclickOpenGithub\fP (\fBComponent\fP *comp, \fBGameInstance\fP *this)"
.br
.RI "onClick() - GitHub page opener button action "
.in -1c
.SH "Detailed Description"
.PP 
Components and event management for menus (header) 


.PP
\fBAuthor:\fP
.RS 4
Gerviba (Szabo Gergely) 
.RE
.PP
\fBDefinition:\fP
.RS 4
\fBcomponents\&.c\fP 
.RE
.PP

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBAlign\fP"

.PP
Alignment for text components\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIALIGN_LEFT \fP\fP
The anchor point will be placed to the left side of the object\&. 
.TP
\fB\fIALIGN_CENTER \fP\fP
The anchor point will be placed to the center of the object\&. 
.TP
\fB\fIALIGN_RIGHT \fP\fP
The anchor point will be placed to the right side of the object\&. 
.SS "enum \fBComponentType\fP"

.PP
\fBComponent\fP type\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fICT_OBJECT \fP\fP
Object like component\&. Requires a loaded \fBActiveObjectInstance\fP\&. 
.PP
\fBSee also:\fP
.RS 4
\fBActiveObjectInstance\fP 
.RE
.PP

.TP
\fB\fICT_TEXT \fP\fP
Text component\&. Optimal for messages and buttons\&. 
.PP
\fBSee also:\fP
.RS 4
\fBTextComponent\fP 
.RE
.PP

.TP
\fB\fICT_IMAGE \fP\fP
Image component\&. A texture will be loaded end rendered to this component\&. 
.PP
\fBSee also:\fP
.RS 4
\fBImageComponent\fP 
.RE
.PP

.SS "enum \fBRelativeX\fP"

.PP
\fBComponent\fP relative horizontal position\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIX_LEFT \fP\fP
Relative to the left horizontal side of the screen\&. 
.TP
\fB\fIX_CENTER \fP\fP
Relative to the horizontal center of the screen\&. 
.TP
\fB\fIX_RIGHT \fP\fP
Relative to the right horizontal side of the screen\&. 
.SS "enum \fBRelativeY\fP"

.PP
\fBComponent\fP relative vertical position\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIY_BOTTOM \fP\fP
Relative to the top vertical side of the screen\&. 
.TP
\fB\fIY_CENTER \fP\fP
Relative to the vertical center of the screen\&. 
.TP
\fB\fIY_TOP \fP\fP
Relative to the right vertical side of the screen\&. 
.SH "Function Documentation"
.PP 
.SS "void calcObjectComponentPosition (\fBComponent\fP * comp, \fBGameInstance\fP * this)"

.PP
onCalc() - \fBComponent\fP position calculator method 
.PP
\fBParameters:\fP
.RS 4
\fIcomp\fP \fBComponent\fP instance 
.br
\fIthis\fP Actual \fBGameInstance\fP instance 
.RE
.PP

.SS "void calcOptionsGraphicsButton (\fBComponent\fP * comp, \fBGameInstance\fP * this)"

.PP
onCalc() - \fBOptions\fP button calculator method 
.PP
\fBParameters:\fP
.RS 4
\fIcomp\fP \fBComponent\fP instance 
.br
\fIthis\fP Actual \fBGameInstance\fP instance 
.RE
.PP
< NO MSAA 
.br

.br

.br

.br

.br

.br

.br

.br

.br
 < x4 MSAA 
.br

.br

.br

.br

.br

.br

.br

.br
 < x8 MSAA 
.br

.br

.br

.br

.br

.br

.br
 < x16 MSAA 
.br

.br

.br

.br

.br

.br
 < NO FULLSCREEN 
.br

.br

.br

.br

.br
 < FULLSCREEN 
.br

.br

.br

.br
 < NO CAMERA MOVEMENT 
.br

.br

.br
 < CAMERA MOVEMENT 
.br

.br
 < RESOLUTION 
.br
 < RESOLUTION 
.SS "void calcTextButton (\fBComponent\fP * comp, \fBGameInstance\fP * this)"

.PP
onCalc() - \fBTextComponent\fP hover calculator method 
.PP
\fBParameters:\fP
.RS 4
\fIcomp\fP \fBComponent\fP instance 
.br
\fIthis\fP Actual \fBGameInstance\fP instance 
.RE
.PP

.SS "void clickBack (\fBComponent\fP * comp, \fBGameInstance\fP * this)"

.PP
onClick() - Back to the main menu button action 
.PP
\fBSee also:\fP
.RS 4
fileformats\&.md -> \fBComponent\fP action types 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIcomp\fP \fBComponent\fP instance 
.br
\fIthis\fP Actual \fBGameInstance\fP instance 
.RE
.PP

.SS "void clickControllsSet (\fBComponent\fP * comp, \fBGameInstance\fP * this)"

.PP
onClick() - \fBOptions\fP menu controlls set button action 
.PP
\fBSee also:\fP
.RS 4
fileformats\&.md -> \fBComponent\fP action types 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIcomp\fP \fBComponent\fP instance 
.br
\fIthis\fP Actual \fBGameInstance\fP instance 
.RE
.PP

.SS "void clickCredits (\fBComponent\fP * comp, \fBGameInstance\fP * this)"

.PP
onClick() - Credits menu button action 
.PP
\fBSee also:\fP
.RS 4
fileformats\&.md -> \fBComponent\fP action types 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIcomp\fP \fBComponent\fP instance 
.br
\fIthis\fP Actual \fBGameInstance\fP instance 
.RE
.PP

.SS "void clickExit (\fBComponent\fP * comp, \fBGameInstance\fP * this)"

.PP
onClick() - Exit button action 
.PP
\fBSee also:\fP
.RS 4
fileformats\&.md -> \fBComponent\fP action types 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIcomp\fP \fBComponent\fP instance 
.br
\fIthis\fP Actual \fBGameInstance\fP instance 
.RE
.PP

.SS "void clickGameSelector (\fBComponent\fP * comp, \fBGameInstance\fP * this)"

.PP
onClick() - StartGame button action 
.PP
\fBSee also:\fP
.RS 4
fileformats\&.md -> \fBComponent\fP action types 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIcomp\fP \fBComponent\fP instance 
.br
\fIthis\fP Actual \fBGameInstance\fP instance 
.RE
.PP

.SS "void clickGraphicsSet (\fBComponent\fP * comp, \fBGameInstance\fP * this)"

.PP
onClick() - \fBOptions\fP menu graphics setting set button action 
.PP
\fBSee also:\fP
.RS 4
fileformats\&.md -> \fBComponent\fP action types 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIcomp\fP \fBComponent\fP instance 
.br
\fIthis\fP Actual \fBGameInstance\fP instance 
.RE
.PP

.SS "void clickOpenGithub (\fBComponent\fP * comp, \fBGameInstance\fP * this)"

.PP
onClick() - GitHub page opener button action 
.PP
\fBWarning:\fP
.RS 4
This can be platform specific and might not work on your system\&. 
.RE
.PP
\fBSee also:\fP
.RS 4
fileformats\&.md -> \fBComponent\fP action types 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIcomp\fP \fBComponent\fP instance 
.br
\fIthis\fP Actual \fBGameInstance\fP instance 
.RE
.PP

.SS "void clickOptions (\fBComponent\fP * comp, \fBGameInstance\fP * this)"

.PP
onClick() - \fBOptions\fP menu button action 
.PP
\fBSee also:\fP
.RS 4
fileformats\&.md -> \fBComponent\fP action types 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIcomp\fP \fBComponent\fP instance 
.br
\fIthis\fP Actual \fBGameInstance\fP instance 
.RE
.PP

.SS "void clickStartButton (\fBComponent\fP *, \fBGameInstance\fP *)"

.PP
onClick() - Start map button action 
.PP
\fBSee also:\fP
.RS 4
fileformats\&.md -> \fBComponent\fP action types 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIcomp\fP \fBComponent\fP instance 
.br
\fIthis\fP Actual \fBGameInstance\fP instance 
.RE
.PP

.SS "void freeGenericValue (\fBGenericType\fP * value)"

.PP
Free the passed gereric value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The passed generic instance 
.RE
.PP
\fBNote:\fP
.RS 4
The passed argument cannot be used after this method processed 
.RE
.PP

.SS "GLfloat getAbsoluteX (\fBGameInstance\fP * this, \fBRelativeX\fP relX)"

.PP
Absolute coordinate by the specified relative point and the camera\&. 
.PP
\fBNote:\fP
.RS 4
Z = 1 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBRelativeX\fP
.RE
.PP
\fBParameters:\fP
.RS 4
\fIthis\fP Actual \fBGameInstance\fP instance 
.br
\fIrelX\fP Relative point (x-dim)\&. Used as a reference\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Absolute x coordinate 
.RE
.PP

.SS "GLfloat getAbsoluteY (\fBGameInstance\fP * this, \fBRelativeY\fP relY)"

.PP
Absolute coordinate by the specified relative point and the camera\&. 
.PP
\fBNote:\fP
.RS 4
Z = 1 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBRelativeY\fP
.RE
.PP
\fBParameters:\fP
.RS 4
\fIthis\fP Actual \fBGameInstance\fP instance 
.br
\fIrelY\fP Relative point (y-dim)\&. Used as a reference\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Absolute y coordinate 
.RE
.PP

.SS "GLfloat getCursorProjectedX (\fBGameInstance\fP * this, double x)"

.PP
Calculate cursor projected value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIthis\fP Actual \fBGameInstance\fP instance 
.br
\fIx\fP \fBCursor\fP x-dim position in pixels
.RE
.PP
\fBReturns:\fP
.RS 4
Projected x-dim coordinate 
.RE
.PP

.SS "GLfloat getCursorProjectedY (\fBGameInstance\fP * this, double y)"

.PP
Calculate cursor projected value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIthis\fP Actual \fBGameInstance\fP instance 
.br
\fIy\fP \fBCursor\fP y-dim position in pixels
.RE
.PP
\fBReturns:\fP
.RS 4
Projected y-dim coordinate 
.RE
.PP

.SS "GLfloat getFontAlign (\fBGameInstance\fP * this, char str[], \fBFontSize\fP fontSize, \fBAlign\fP align)"

.PP
Calculate text alignment (x-dim) 
.PP
\fBParameters:\fP
.RS 4
\fIthis\fP Actual \fBGameInstance\fP instance 
.br
\fIstr\fP The text  fontSize The size of the font 
.br
\fIalign\fP Alignment
.RE
.PP
\fBReturns:\fP
.RS 4
Calculated x-dim alignment 
.RE
.PP

.SS "GLfloat getGenericFloatValue (\fBGenericType\fP * value)"

.PP
Generic value (GLfloat type) getter\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The passed generic instance 
.RE
.PP
\fBReturns:\fP
.RS 4
GLfloat value 
.RE
.PP

.SS "GLint getGenericIntValue (\fBGenericType\fP * value)"

.PP
Generic value (GLint type) getter\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The passed generic instance 
.RE
.PP
\fBReturns:\fP
.RS 4
GLint value 
.RE
.PP

.SS "\fBGenericType\fP* newGenericFloatValue (GLfloat floatValue)"

.PP
Constructs a new GLfloat generic value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP GLfloat numeric value 
.RE
.PP
\fBReturns:\fP
.RS 4
GenericValue instance pointer 
.RE
.PP

.SS "\fBGenericType\fP* newGenericIntValue (GLint intValue)"

.PP
Constructs a new GLint generic value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP GLint numeric value 
.RE
.PP
\fBReturns:\fP
.RS 4
GenericValue instance pointer 
.RE
.PP

.SS "\fBGenericType\fP* newGenericValue (void * value, size_t size)"

.PP
Constructs a new generic value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP Pointer to the data 
.br
\fIsize\fP Size of the data 
.RE
.PP
\fBReturns:\fP
.RS 4
GenericValue instance pointer 
.RE
.PP

.SS "void renderTextComponent (\fBComponent\fP * comp, \fBGameInstance\fP * this)"

.PP
\fBonRender()\fP - \fBTextComponent\fP renderer method 
.PP
\fBParameters:\fP
.RS 4
\fIcomp\fP \fBComponent\fP instance 
.br
\fIthis\fP Actual \fBGameInstance\fP instance 
.RE
.PP

.SS "void setGenericFloatValue (\fBGenericType\fP * value, GLfloat newFloatValue)"

.PP
Sets the value of the passed generic instance\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The passed generic instance 
.br
\fInewIntValue\fP The new newFloatValue type value 
.RE
.PP

.SS "void setGenericIntValue (\fBGenericType\fP * value, GLint newIntValue)"

.PP
Sets the value of the passed generic instance\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The passed generic instance 
.br
\fInewIntValue\fP The new GLint type value 
.RE
.PP

.SS "void setGenericValue (\fBGenericType\fP * value, void * newValue, size_t newSize)"

.PP
Sets the value of the passed generic instance\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The passed generic instance 
.br
\fInewValue\fP The new value 
.br
\fInewSize\fP The size of the new value 
.RE
.PP

.SS "void updateCursor (\fBGameInstance\fP * this)"

.PP
Update cursor pointer\&. Only available when \fCmenu->useCursor = true\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fIthis\fP Actual \fBGameInstance\fP instance 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for stdgame from the source code\&.
