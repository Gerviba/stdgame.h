.TH "src/font.h" 3 "Tue Dec 5 2017" "stdgame" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/font.h \- \fBFont\fP family loader and renderer (header)  

.SH SYNOPSIS
.br
.PP
\fC#include 'stdgame\&.h'\fP
.br
\fC#include 'object\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBCharPart\fP"
.br
.RI "Cube structure for character\&. "
.ti -1c
.RI "struct \fBChar\fP"
.br
.RI "Character object (used in \fBFont\fP families) "
.ti -1c
.RI "struct \fBFont\fP"
.br
.RI "\fBFont\fP family\&. "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBFontSize\fP { \fBFS_EXTRALOW_DPI\fP = 64, \fBFS_LOW_DPI\fP = 32, \fBFS_NORMAL_DPI\fP = 16, \fBFS_HIGH_DPI\fP = 8 }"
.br
.RI "\fBFont\fP size enumeration\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBinitFont\fP (\fBGameInstance\fP *)"
.br
.RI "Initialize font from \fCassets/fonts/default\&.font\fP "
.ti -1c
.RI "void \fBrenderFontTo\fP (\fBGameInstance\fP *this, char str[], GLfloat position[3], GLfloat color[4], \fBFontSize\fP size)"
.br
.RI "Renders the entered text\&. "
.ti -1c
.RI "void \fBrenderFontToComponent\fP (\fBGameInstance\fP *this, char str[], GLfloat position[3], GLfloat color[4], \fBFontSize\fP size, GLfloat \fBmin\fP[3], GLfloat \fBmax\fP[3])"
.br
.RI "Renders the entered text and saves the min and the max coordinates into the pass arguments\&. "
.ti -1c
.RI "void \fBfreeFont\fP (\fBGameInstance\fP *)"
.br
.RI "Free the loaded fonts 
.br
 Must be called before exit\&. "
.ti -1c
.RI "\fBChar\fP * \fBgetChar\fP (\fBFont\fP *, char)"
.br
.RI "Get \fBChar\fP type pointer from the default\&. "
.in -1c
.SH "Detailed Description"
.PP 
\fBFont\fP family loader and renderer (header) 


.PP
\fBAuthor:\fP
.RS 4
Gerviba (Szabo Gergely) 
.RE
.PP
\fBDefinition:\fP
.RS 4
\fBfont\&.c\fP 
.RE
.PP

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBFontSize\fP"

.PP
\fBFont\fP size enumeration\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFS_EXTRALOW_DPI \fP\fP
1/64 unit per cube 
.TP
\fB\fIFS_LOW_DPI \fP\fP
1/32 unit per cube 
.TP
\fB\fIFS_NORMAL_DPI \fP\fP
1/16 unit per cube 
.TP
\fB\fIFS_HIGH_DPI \fP\fP
1/8 unit per cube 
.SH "Function Documentation"
.PP 
.SS "void freeFont (\fBGameInstance\fP * this)"

.PP
Free the loaded fonts 
.br
 Must be called before exit\&. 
.PP
\fBParameters:\fP
.RS 4
\fIthis\fP Actual \fBGameInstance\fP instance 
.RE
.PP

.SS "\fBChar\fP* getChar (\fBFont\fP * font, char c)"

.PP
Get \fBChar\fP type pointer from the default\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfont\fP \fBFont\fP family 
.br
\fIc\fP Character identifier 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBChar\fP object pointer 
.RE
.PP

.SS "void renderFontTo (\fBGameInstance\fP * this, char str[], GLfloat position[3], GLfloat defaultColor[4], \fBFontSize\fP size)"

.PP
Renders the entered text\&. 
.PP
\fBParameters:\fP
.RS 4
\fIthis\fP \fBGameInstance\fP pointer 
.br
\fIstr\fP String to render 
.br
\fIposition\fP Where to render 
.br
\fIcolor\fP Dynamic color 
.br
\fIsize\fP Size of the chars
.RE
.PP
\fBNote:\fP
.RS 4
This function can be used in both \fConLogic\fP and \fConRender\fP functions\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBrenderFontToComponent()\fP 
.RE
.PP

.SS "void renderFontToComponent (\fBGameInstance\fP * this, char str[], GLfloat position[3], GLfloat defaultColor[4], \fBFontSize\fP size, GLfloat min[3], GLfloat max[3])"

.PP
Renders the entered text and saves the min and the max coordinates into the pass arguments\&. 
.PP
\fBParameters:\fP
.RS 4
\fIthis\fP \fBGameInstance\fP pointer 
.br
\fIstr\fP String to render 
.br
\fIposition\fP Where to render 
.br
\fIcolor\fP Dynamic color 
.br
\fIsize\fP Size of the chars 
.br
\fImin\fP Minimum coordinate of the rendered object 
.br
\fImax\fP Maximum coordinate of the rendered object
.RE
.PP
\fBNote:\fP
.RS 4
This function can be used in both \fConLogic\fP and \fConRender\fP functions\&. 
.RE
.PP
\fBWarning:\fP
.RS 4
It sets the value of the \fCmin\fP and the \fCmax\fP arrays\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBrenderFontTo()\fP 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for stdgame from the source code\&.
