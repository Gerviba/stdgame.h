.TH "src/map.h" 3 "Tue Dec 5 2017" "stdgame" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/map.h \- \fBMap\fP and menu loader and utilities (header)  

.SH SYNOPSIS
.br
.PP
\fC#include <time\&.h>\fP
.br
\fC#include 'object\&.h'\fP
.br
\fC#include 'linkedlist\&.h'\fP
.br
\fC#include 'menu\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBLight\fP"
.br
.RI "Point light object\&. "
.ti -1c
.RI "struct \fBTexture\fP"
.br
.RI "Loaded texture\&. "
.ti -1c
.RI "struct \fBTextureBlock\fP"
.br
.RI "Block sides textures\&. "
.ti -1c
.RI "struct \fBTile\fP"
.br
.RI "\fBMap\fP tile\&. "
.ti -1c
.RI "struct \fBAction\fP"
.br
.RI "\fBAction\fP instance\&. "
.ti -1c
.RI "struct \fBPhysicsArea\fP"
.br
.RI "Physics area\&. "
.ti -1c
.RI "struct \fBRegion\fP"
.br
.RI "\fBAction\fP activator region\&. "
.ti -1c
.RI "struct \fBMessage\fP"
.br
.RI "Text message (rendered as 3D object) "
.ti -1c
.RI "struct \fBEntity\fP"
.br
.RI "Mobs, monsters\&. "
.ti -1c
.RI "struct \fBMap\fP"
.br
.RI "The game map or menu\&. "
.ti -1c
.RI "struct \fBHighScoreValue\fP"
.br
.RI "Record file line\&. "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBTTMASK_RENDER_BOTTOM\fP   TT_BORDER_TOP"
.br
.ti -1c
.RI "#define \fBTTMASK_RENDER_TOP\fP   TT_BORDER_BOTTOM"
.br
.ti -1c
.RI "#define \fBTTMASK_RENDER_LEFT\fP   TT_BORDER_RIGHT"
.br
.ti -1c
.RI "#define \fBTTMASK_RENDER_RIGHT\fP   TT_BORDER_LEFT"
.br
.ti -1c
.RI "#define \fBTTMASK_RENDER_FRONT\fP   TT_FOREGROUND"
.br
.ti -1c
.RI "#define \fBMOVE_BLOCK_Y\fP   (TT_BORDER_TOP | TT_BORDER_BOTTOM) & 0b11110"
.br
.ti -1c
.RI "#define \fBMOVE_BLOCK_X\fP   (TT_BORDER_RIGHT | TT_BORDER_LEFT) & 0b11110"
.br
.ti -1c
.RI "#define \fBACTION_VALUE_DONT_CARE\fP   \-65536"
.br
.ti -1c
.RI "#define \fBACTION_LOSE_ID\fP   \-10000"
.br
.ti -1c
.RI "#define \fBHEALT_COMPONENT_ID\fP   \-1000"
.br
.ti -1c
.RI "#define \fBSCORE_COMPONENT_ID\fP   \-1001"
.br
.ti -1c
.RI "#define \fBENTITY_FLOATING_REFERENCEPOINT_ID\fP   8"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBTileType\fP { \fBTT_BACKGROUND\fP = 0b00000, \fBTT_FOREGROUND\fP = 0b00001, \fBTT_BORDER_BOTTOM\fP = 0b00011, \fBTT_BORDER_TOP\fP = 0b00101, \fBTT_BORDER_RIGHT\fP = 0b01001, \fBTT_BORDER_LEFT\fP = 0b10001, \fBTT_BORDER_TOP_BOTTOM\fP = 0b00111, \fBTT_BORDER_BOTTOM_RIGHT\fP = 0b01011, \fBTT_BORDER_TOP_RIGHT\fP = 0b01101, \fBTT_BORDER_BOTTOM_LEFT\fP = 0b10011, \fBTT_BORDER_TOP_LEFT\fP = 0b10101, \fBTT_BORDER_LEFT_RIGHT\fP = 0b11001, \fBTT_BORDER_TOP_BOTTOM_RIGHT\fP = 0b01111, \fBTT_BORDER_TOP_BOTTOM_LEFT\fP = 0b10111, \fBTT_BORDER_BOTTOM_LEFT_RIGHT\fP = 0b11011, \fBTT_BORDER_TOP_LEFT_RIGHT\fP = 0b11101, \fBTT_BORDER_ALL\fP = 0b11111 }"
.br
.RI "Format: 0bRLTBF\&. "
.ti -1c
.RI "enum \fBActionType\fP { \fBACTION_TELEPORT\fP, \fBACTION_DAMAGE\fP, \fBACTION_ADD_SCORE\fP, \fBACTION_SET_DOBJ\fP, \fBACTION_SET_AOBJ\fP, \fBACTION_SET_ITEM\fP, \fBACTION_SET_LIGHT\fP, \fBACTION_OBJECT_PSX\fP, \fBACTION_WIN\fP, \fBACTION_LOSE\fP }"
.br
.RI "Type of an action\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBMap\fP * \fBloadMap\fP (\fBGameInstance\fP *this, char path[])"
.br
.RI "Loads a map or menu\&. "
.ti -1c
.RI "void \fBfreeMap\fP (\fBMap\fP *map)"
.br
.RI "Free the map\&. "
.ti -1c
.RI "void \fBgetKeyName\fP (\fBGameInstance\fP *this, char *str, int key)"
.br
.RI "Copy a key name into the str value\&. "
.ti -1c
.RI "void \fBgetOptionCaption\fP (\fBGameInstance\fP *this, char *name, char *str, int id)"
.br
.RI "Find and copy a key name into the str value by option name and index\&. "
.ti -1c
.RI "void \fBaddTextComponent\fP (\fBMap\fP *map, char text[100], int id, \fBRelativeX\fP relX, \fBRelativeY\fP relY, \fBAlign\fP align, GLfloat x, GLfloat y, \fBFontSize\fP size)"
.br
.RI "Adds a \fBTextComponent\fP\&. "
.ti -1c
.RI "void \fBaddTextComponentColor\fP (\fBMap\fP *map, char text[100], int id, \fBRelativeX\fP relX, \fBRelativeY\fP relY, \fBAlign\fP align, GLfloat pos[3], GLfloat color[4], \fBFontSize\fP size)"
.br
.RI "Adds a \fBTextComponent\fP\&. "
.ti -1c
.RI "void \fBupdateHightScore\fP (\fBGameInstance\fP *this, time_t deltaT)"
.br
.RI "Update highscores if necessary\&. "
.in -1c
.SH "Detailed Description"
.PP 
\fBMap\fP and menu loader and utilities (header) 


.PP
\fBAuthor:\fP
.RS 4
Gerviba (Szabo Gergely) 
.RE
.PP
\fBDefinition:\fP
.RS 4
\fBmap\&.c\fP 
.RE
.PP

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBActionType\fP"

.PP
Type of an action\&. 
.PP
\fBSee also:\fP
.RS 4
\fBAction\fP 
.RE
.PP

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIACTION_TELEPORT \fP\fP
Teleport to: x y\&. 
.TP
\fB\fIACTION_DAMAGE \fP\fP
Damage: count\&. 
.TP
\fB\fIACTION_ADD_SCORE \fP\fP
Score: count\&. 
.TP
\fB\fIACTION_SET_DOBJ \fP\fP
Set dynamic object: dobj\&.id x y z alpha beta gamma SizeX SizeY SizeZ visible visible (-10000 = don't care) 
.PP
\fBSee also:\fP
.RS 4
\fBDynamicObject\fP 
.PP
\fBDynamicObjectInstance\fP 
.RE
.PP

.TP
\fB\fIACTION_SET_AOBJ \fP\fP
Set active object: aobj\&.id x y z alpha beta gamma SizeX SizeY SizeZ visible (-10000 = don't care) 
.PP
\fBSee also:\fP
.RS 4
\fBActiveObject\fP 
.PP
\fBActiveObjectInstance\fP 
.RE
.PP

.TP
\fB\fIACTION_SET_ITEM \fP\fP
Set grabbed item to the selectem: itemId\&. 
.TP
\fB\fIACTION_SET_LIGHT \fP\fP
Set light object: light\&.id x y z strength rrggbb specular intensity reference\&. 
.PP
\fBSee also:\fP
.RS 4
\fBLight\fP 
.RE
.PP

.TP
\fB\fIACTION_OBJECT_PSX \fP\fP
Object psysics setter: id allowed\&. 
.PP
\fBSee also:\fP
.RS 4
\fBPhysicsArea\fP 
.RE
.PP

.TP
\fB\fIACTION_WIN \fP\fP
Win the game\&. 
.TP
\fB\fIACTION_LOSE \fP\fP
Loose the game\&. 
.SS "enum \fBTileType\fP"

.PP
Format: 0bRLTBF\&. \fBChar\fP  Meaning   T  TOP   R  RIGHT   B  BOTTOM   L  LEFT   F  FOREGROUND/BACKGROUND   
.PP
It's like in the CSS box model
.PP
\fBNote:\fP
.RS 4
The viewport is same as in the camera\&. 
.RE
.PP
\fBSee also:\fP
.RS 4
TTMASK_RENDER_BOTTOM 
.PP
TTMASK_RENDER_TOP 
.PP
TTMASK_RENDER_LEFT 
.PP
TTMASK_RENDER_RIGHT 
.PP
TTMASK_RENDER_FRONT
.RE
.PP
Physics on when: (TileType & 0b11110) != 0 
.SH "Function Documentation"
.PP 
.SS "void addTextComponent (\fBMap\fP * map, char text[100], int id, \fBRelativeX\fP relX, \fBRelativeY\fP relY, \fBAlign\fP align, GLfloat x, GLfloat y, \fBFontSize\fP size)"

.PP
Adds a \fBTextComponent\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fImap\fP Current map 
.br
\fItext\fP Caption 
.br
\fIid\fP Identifier 
.br
\fIrelX\fP Relative X point 
.br
\fIrelY\fP Relative Y point 
.br
\fIalign\fP Alignment 
.br
\fIx\fP X coordinate 
.br
\fIy\fP Y coordinate 
.br
\fIsize\fP Size of the font 
.RE
.PP

.SS "void addTextComponentColor (\fBMap\fP * map, char text[100], int id, \fBRelativeX\fP relX, \fBRelativeY\fP relY, \fBAlign\fP align, GLfloat pos[3], GLfloat color[4], \fBFontSize\fP size)"

.PP
Adds a \fBTextComponent\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fImap\fP Current map 
.br
\fItext\fP Caption 
.br
\fIid\fP Identifier 
.br
\fIrelX\fP Relative X point 
.br
\fIrelY\fP Relative Y point 
.br
\fIalign\fP Alignment 
.br
\fIpos\fP Coordinates (3D) 
.br
\fIcolor\fP \fBFont\fP default color (RGBA) 
.br
\fIsize\fP Size of the font 
.RE
.PP

.SS "void freeMap (\fBMap\fP * map)"

.PP
Free the map\&. 
.PP
\fBParameters:\fP
.RS 4
\fImap\fP \fBMap\fP to free 
.RE
.PP

.SS "void getKeyName (\fBGameInstance\fP * this, char * str, int key)"

.PP
Copy a key name into the str value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIthis\fP Actual \fBGameInstance\fP instance 
.br
\fIstr\fP This is where the name will be copied (The longest will be: 9 + '\\0') 
.br
\fIkey\fP Key id 
.RE
.PP

.SS "void getOptionCaption (\fBGameInstance\fP * this, char * name, char * str, int id)"

.PP
Find and copy a key name into the str value by option name and index\&. 
.PP
\fBParameters:\fP
.RS 4
\fIthis\fP Actual \fBGameInstance\fP instance 
.br
\fIname\fP Option name 
.br
\fIstr\fP This is where the name will be copied (The longest will be: 9 + '\\0') 
.br
\fIid\fP Index of the key (0-2) 
.RE
.PP

.SS "\fBMap\fP* loadMap (\fBGameInstance\fP * this, char path[])"

.PP
Loads a map or menu\&. 
.PP
\fBSee also:\fP
.RS 4
fileformats\&.md -> \fBMap\fP and \fBMenu\fP table
.RE
.PP
\fBParameters:\fP
.RS 4
\fIthis\fP Actual \fBGameInstance\fP instance 
.br
\fIpath\fP \fBMap\fP or menu file path 
.RE
.PP

.SS "void updateHightScore (\fBGameInstance\fP * this, time_t deltaT)"

.PP
Update highscores if necessary\&. 
.PP
\fBParameters:\fP
.RS 4
\fIthis\fP Actual \fBGameInstance\fP instance 
.br
\fIdeltaT\fP Completed time 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for stdgame from the source code\&.
